# parsers/simple_parser.py
import requests
from bs4 import BeautifulSoup

print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω!")

class SimpleParser:
    def __init__(self):
        print("üéØ –ü–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤!")
    
    def get_prices(self, car_name):
        """–ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω"""
        try:
            url = f"https://avtoelon.uz/uz/avto/avtomobili-{car_name.lower()}/"
            print(f"üîç –ü–∞—Ä—Å–∏–º: {car_name}")
            
            response = requests.get(url, timeout=10)
            
            if response.status_code == 200:
                # –ü—Ä–æ—Å—Ç–æ –∏—â–µ–º –ª—é–±—ã–µ —Ü–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                soup = BeautifulSoup(response.text, 'html.parser')
                prices = []
                
                # –ò—â–µ–º —Ç–µ–∫—Å—Ç—ã —Å $ –∏–ª–∏ —Å—É–º
                for text in soup.stripped_strings:
                    if '$' in text or '—Å—É–º' in text:
                        clean = text.strip()
                        if len(clean) < 50:  # –ö–æ—Ä–æ—Ç–∫–∏–µ —Ç–µ–∫—Å—Ç—ã (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ü–µ–Ω—ã)
                            prices.append(clean)
                
                return {
                    "car": car_name,
                    "prices": prices[:5],  # –ü–µ—Ä–≤—ã–µ 5 —Ü–µ–Ω
                    "url": url,
                    "status": "success"
                }
            else:
                return {"error": f"–û—à–∏–±–∫–∞ {response.status_code}", "status": "error"}
                
        except Exception as e:
            return {"error": str(e), "status": "error"}
