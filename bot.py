import os
import time
import logging
from threading import Thread
from flask import Flask
import telebot
from telebot import types

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ –æ—à–∏–±–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

print("üöÄ AutoQiyos Bot –∑–∞–ø—É—â–µ–Ω!")

TOKEN = os.environ.get('BOT_TOKEN')
if not TOKEN:
    print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

# –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º - —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏ telebot
telebot.logger.setLevel(logging.WARNING)

# –£–¥–∞–ª—è–µ–º webhook –±–µ–∑ –æ—à–∏–±–æ–∫
try:
    bot.delete_webhook(drop_pending_updates=True)
    time.sleep(2)
    print("‚úÖ Webhook –æ—á–∏—â–µ–Ω")
except Exception as e:
    print(f"‚ÑπÔ∏è Webhook: {e}")

# Flask app –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
app = Flask(__name__)

@app.route('/')
def home():
    return "ü§ñ AutoQiyos Bot —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!"

@app.route('/health')
def health():
    return "‚úÖ OK"

def run_flask():
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –±–µ–∑ debug —Ä–µ–∂–∏–º–∞
    from waitress import serve
    serve(app, host='0.0.0.0', port=8080)

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ —Ñ–æ–Ω–µ
Thread(target=run_flask, daemon=True).start()
print("üåê Flask –∑–∞–ø—É—â–µ–Ω")

# üéØ –ö–õ–ê–í–ò–ê–¢–£–†–´
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üöó –°—Ä–∞–≤–Ω–∏—Ç—å –∞–≤—Ç–æ"))
    markup.add(types.KeyboardButton("üîé –ü–æ–∏—Å–∫ –ø–æ —Å–∞–π—Ç—É"))
    markup.add(types.KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"))
    markup.add(types.KeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º"))
    return markup

def back_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
    return markup

# üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üöò <b>AutoQiyos ‚Äî —Å—Ä–∞–≤–Ω–∏ –∞–≤—Ç–æ –ª–µ–≥–∫–æ!</b>\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
        reply_markup=main_menu()
    )

@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    text = message.text
    
    if text == "üöó –°—Ä–∞–≤–Ω–∏—Ç—å –∞–≤—Ç–æ":
        bot.send_message(
            message.chat.id,
            "üîß –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: <b>Onix vs Tracker</b>)",
            reply_markup=back_button()
        )
    
    elif text == "üîé –ü–æ–∏—Å–∫ –ø–æ —Å–∞–π—Ç—É":
        bot.send_message(
            message.chat.id,
            "üïµÔ∏è –í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∏–ª–∏ –º–æ–¥–µ–ª—å, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.",
            reply_markup=back_button()
        )
    
    elif text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
        bot.send_message(
            message.chat.id,
            "‚ÑπÔ∏è <b>AutoQiyos</b> ‚Äî –±–æ—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞–≤—Ç–æ –∏–∑ —Å–∞–π—Ç–æ–≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞.",
            reply_markup=back_button()
        )
    
    elif text == "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(
            "üì© –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É", 
            url="https://t.me/behzod_islomoff"
        ))
        bot.send_message(
            message.chat.id, 
            "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º:", 
            reply_markup=markup
        )
    
    elif text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        bot.send_message(
            message.chat.id, 
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", 
            reply_markup=main_menu()
        )
    
    else:
        bot.send_message(
            message.chat.id,
            "‚ùì –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá", 
            reply_markup=main_menu()
        )

print("‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
def run_bot():
    while True:
        try:
            bot.infinity_polling(timeout=60, long_polling_timeout=60)
        except Exception as e:
            print(f"üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–∑-–∑–∞: {e}")
            time.sleep(5)

run_bot()
