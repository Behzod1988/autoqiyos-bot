import os
import time
from threading import Thread
from flask import Flask
import telebot
from telebot import types

print("üöÄ AutoQiyos Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.environ.get('BOT_TOKEN')
if not TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# üî• –£–î–ê–õ–Ø–ï–ú –°–¢–ê–†–´–ô WEBHOOK
try:
    bot.delete_webhook()
    print("‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω!")
    time.sleep(1)
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}")

# Flask –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è –æ–Ω–ª–∞–π–Ω
app = Flask(__name__)

@app.route('/')
def home():
    return "ü§ñ AutoQiyos Bot —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!"

def run_flask():
    app.run(host='0.0.0.0', port=8080, debug=False)

Thread(target=run_flask, daemon=True).start()

# üéØ –ö–õ–ê–í–ò–ê–¢–£–†–´ –ö–ê–ö –í–ß–ï–†–ê
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üöó –°—Ä–∞–≤–Ω–∏—Ç—å –∞–≤—Ç–æ"))
    markup.add(types.KeyboardButton("üîé –ü–æ–∏—Å–∫ –ø–æ —Å–∞–π—Ç—É"))
    markup.add(types.KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"))
    markup.add(types.KeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º"))
    return markup

def back_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
    return markup

# üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ê–ö –í–ß–ï–†–ê
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üöò <b>AutoQiyos ‚Äî —Å—Ä–∞–≤–Ω–∏ –∞–≤—Ç–æ –ª–µ–≥–∫–æ!</b>\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá",
        parse_mode='HTML', 
        reply_markup=main_menu()
    )

@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    text = message.text
    
    if text == "üöó –°—Ä–∞–≤–Ω–∏—Ç—å –∞–≤—Ç–æ":
        bot.send_message(
            message.chat.id,
            "üîß –í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: <b>Onix vs Tracker</b>)",
            parse_mode='HTML', 
            reply_markup=back_button()
        )
    
    elif text == "üîé –ü–æ–∏—Å–∫ –ø–æ —Å–∞–π—Ç—É":
        bot.send_message(
            message.chat.id,
            "üïµÔ∏è –í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∏–ª–∏ –º–æ–¥–µ–ª—å, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.",
            reply_markup=back_button()
        )
    
    elif text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
        bot.send_message(
            message.chat.id,
            "‚ÑπÔ∏è <b>AutoQiyos</b> ‚Äî –±–æ—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞–≤—Ç–æ –∏–∑ —Å–∞–π—Ç–æ–≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞.\n\n"
            "‚ö° <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            "‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∞–≤—Ç–æ\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω\n"
            "‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç 24/7",
            parse_mode='HTML',
            reply_markup=back_button()
        )
    
    elif text == "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(
            "üì© –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É", 
            url="https://t.me/behzod_islomoff"
        ))
        bot.send_message(
            message.chat.id, 
            "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º:", 
            reply_markup=markup
        )
    
    elif text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        bot.send_message(
            message.chat.id, 
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", 
            reply_markup=main_menu()
        )
    
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞–≤—Ç–æ
        if " vs " in text.lower() or " –ø—Ä–æ—Ç–∏–≤ " in text.lower():
            try:
                if " vs " in text:
                    car1, car2 = text.split(" vs ", 1)
                else:
                    car1, car2 = text.split(" –ø—Ä–æ—Ç–∏–≤ ", 1)
                
                response = (
                    f"üîÑ <b>–°—Ä–∞–≤–Ω–∏–≤–∞—é –∞–≤—Ç–æ–º–æ–±–∏–ª–∏:</b>\n\n"
                    f"üöó <b>{car1.strip()}</b>\n"
                    f"‚öîÔ∏è VS\n" 
                    f"üöô <b>{car2.strip()}</b>\n\n"
                    f"üìä <i>–§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...</i>\n"
                    f"–°–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
                    f"‚Ä¢ –¶–µ–Ω—ã\n‚Ä¢ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n‚Ä¢ –û—Ç–∑—ã–≤—ã\n‚Ä¢ –†–µ–π—Ç–∏–Ω–≥–∏"
                )
                bot.send_message(message.chat.id, response, parse_mode='HTML')
                
            except:
                bot.send_message(
                    message.chat.id,
                    "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: <b>Onix vs Tracker</b>",
                    parse_mode='HTML'
                )
        else:
            bot.send_message(
                message.chat.id,
                "‚ùì –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í—ã–±–µ—Ä–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá", 
                reply_markup=main_menu()
            )

print("‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º...")
while True:
    try:
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        time.sleep(5)
